// Code generated by protoc-gen-go.
// source: src/github.com/annttu/latenssi/proto/proto.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	src/github.com/annttu/latenssi/proto/proto.proto

It has these top-level messages:
	ResultInt64
	ResultFloat
	ResultRow
	Results
	ResultResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type ResultStatus int32

const (
	ResultStatus_RESULT_OK     ResultStatus = 0
	ResultStatus_RESULT_FAILED ResultStatus = 1
)

var ResultStatus_name = map[int32]string{
	0: "RESULT_OK",
	1: "RESULT_FAILED",
}
var ResultStatus_value = map[string]int32{
	"RESULT_OK":     0,
	"RESULT_FAILED": 1,
}

func (x ResultStatus) String() string {
	return proto1.EnumName(ResultStatus_name, int32(x))
}
func (ResultStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResultInt64 struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ResultInt64) Reset()                    { *m = ResultInt64{} }
func (m *ResultInt64) String() string            { return proto1.CompactTextString(m) }
func (*ResultInt64) ProtoMessage()               {}
func (*ResultInt64) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ResultInt64) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ResultInt64) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ResultFloat struct {
	Key   string  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
}

func (m *ResultFloat) Reset()                    { *m = ResultFloat{} }
func (m *ResultFloat) String() string            { return proto1.CompactTextString(m) }
func (*ResultFloat) ProtoMessage()               {}
func (*ResultFloat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ResultFloat) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ResultFloat) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ResultRow struct {
	// Types that are valid to be assigned to Result:
	//	*ResultRow_Floatresult
	//	*ResultRow_Intresult
	Result isResultRow_Result `protobuf_oneof:"result"`
}

func (m *ResultRow) Reset()                    { *m = ResultRow{} }
func (m *ResultRow) String() string            { return proto1.CompactTextString(m) }
func (*ResultRow) ProtoMessage()               {}
func (*ResultRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isResultRow_Result interface {
	isResultRow_Result()
}

type ResultRow_Floatresult struct {
	Floatresult *ResultFloat `protobuf:"bytes,1,opt,name=floatresult,oneof"`
}
type ResultRow_Intresult struct {
	Intresult *ResultInt64 `protobuf:"bytes,2,opt,name=intresult,oneof"`
}

func (*ResultRow_Floatresult) isResultRow_Result() {}
func (*ResultRow_Intresult) isResultRow_Result()   {}

func (m *ResultRow) GetResult() isResultRow_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ResultRow) GetFloatresult() *ResultFloat {
	if x, ok := m.GetResult().(*ResultRow_Floatresult); ok {
		return x.Floatresult
	}
	return nil
}

func (m *ResultRow) GetIntresult() *ResultInt64 {
	if x, ok := m.GetResult().(*ResultRow_Intresult); ok {
		return x.Intresult
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ResultRow) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _ResultRow_OneofMarshaler, _ResultRow_OneofUnmarshaler, _ResultRow_OneofSizer, []interface{}{
		(*ResultRow_Floatresult)(nil),
		(*ResultRow_Intresult)(nil),
	}
}

func _ResultRow_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*ResultRow)
	// result
	switch x := m.Result.(type) {
	case *ResultRow_Floatresult:
		b.EncodeVarint(1<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Floatresult); err != nil {
			return err
		}
	case *ResultRow_Intresult:
		b.EncodeVarint(2<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Intresult); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ResultRow.Result has unexpected type %T", x)
	}
	return nil
}

func _ResultRow_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*ResultRow)
	switch tag {
	case 1: // result.floatresult
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(ResultFloat)
		err := b.DecodeMessage(msg)
		m.Result = &ResultRow_Floatresult{msg}
		return true, err
	case 2: // result.intresult
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(ResultInt64)
		err := b.DecodeMessage(msg)
		m.Result = &ResultRow_Intresult{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ResultRow_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*ResultRow)
	// result
	switch x := m.Result.(type) {
	case *ResultRow_Floatresult:
		s := proto1.Size(x.Floatresult)
		n += proto1.SizeVarint(1<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *ResultRow_Intresult:
		s := proto1.Size(x.Intresult)
		n += proto1.SizeVarint(2<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Results struct {
	Source     string       `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Host       string       `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Probe      string       `protobuf:"bytes,3,opt,name=probe" json:"probe,omitempty"`
	Time       uint64       `protobuf:"varint,4,opt,name=time" json:"time,omitempty"`
	Resultrows []*ResultRow `protobuf:"bytes,5,rep,name=resultrows" json:"resultrows,omitempty"`
}

func (m *Results) Reset()                    { *m = Results{} }
func (m *Results) String() string            { return proto1.CompactTextString(m) }
func (*Results) ProtoMessage()               {}
func (*Results) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Results) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Results) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Results) GetProbe() string {
	if m != nil {
		return m.Probe
	}
	return ""
}

func (m *Results) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Results) GetResultrows() []*ResultRow {
	if m != nil {
		return m.Resultrows
	}
	return nil
}

type ResultResponse struct {
	Status  ResultStatus `protobuf:"varint,1,opt,name=status,enum=proto.ResultStatus" json:"status,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ResultResponse) Reset()                    { *m = ResultResponse{} }
func (m *ResultResponse) String() string            { return proto1.CompactTextString(m) }
func (*ResultResponse) ProtoMessage()               {}
func (*ResultResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ResultResponse) GetStatus() ResultStatus {
	if m != nil {
		return m.Status
	}
	return ResultStatus_RESULT_OK
}

func (m *ResultResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto1.RegisterType((*ResultInt64)(nil), "proto.ResultInt64")
	proto1.RegisterType((*ResultFloat)(nil), "proto.ResultFloat")
	proto1.RegisterType((*ResultRow)(nil), "proto.ResultRow")
	proto1.RegisterType((*Results)(nil), "proto.Results")
	proto1.RegisterType((*ResultResponse)(nil), "proto.ResultResponse")
	proto1.RegisterEnum("proto.ResultStatus", ResultStatus_name, ResultStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ResultService service

type ResultServiceClient interface {
	SendResults(ctx context.Context, in *Results, opts ...grpc.CallOption) (*ResultResponse, error)
}

type resultServiceClient struct {
	cc *grpc.ClientConn
}

func NewResultServiceClient(cc *grpc.ClientConn) ResultServiceClient {
	return &resultServiceClient{cc}
}

func (c *resultServiceClient) SendResults(ctx context.Context, in *Results, opts ...grpc.CallOption) (*ResultResponse, error) {
	out := new(ResultResponse)
	err := grpc.Invoke(ctx, "/proto.ResultService/SendResults", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ResultService service

type ResultServiceServer interface {
	SendResults(context.Context, *Results) (*ResultResponse, error)
}

func RegisterResultServiceServer(s *grpc.Server, srv ResultServiceServer) {
	s.RegisterService(&_ResultService_serviceDesc, srv)
}

func _ResultService_SendResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Results)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResultServiceServer).SendResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ResultService/SendResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResultServiceServer).SendResults(ctx, req.(*Results))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResultService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ResultService",
	HandlerType: (*ResultServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendResults",
			Handler:    _ResultService_SendResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/github.com/annttu/latenssi/proto/proto.proto",
}

func init() { proto1.RegisterFile("src/github.com/annttu/latenssi/proto/proto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0x5f, 0xcf, 0x93, 0x30,
	0x14, 0xc6, 0xe9, 0xcb, 0xc6, 0xe4, 0xe0, 0x16, 0xac, 0xff, 0x88, 0x57, 0x84, 0x2b, 0xa2, 0x09,
	0x2c, 0xa8, 0xbb, 0x77, 0x71, 0x73, 0x8b, 0x4b, 0x34, 0x9d, 0xc6, 0x4b, 0xc3, 0xb0, 0x6e, 0x44,
	0xa0, 0x0b, 0x2d, 0x5b, 0xbc, 0xf4, 0x23, 0xf8, 0x8d, 0x0d, 0x6d, 0xc9, 0x20, 0x31, 0x79, 0x6f,
	0xba, 0xf3, 0xb4, 0xcf, 0xaf, 0x7b, 0x4e, 0x39, 0x30, 0xe7, 0x75, 0x16, 0x1f, 0x73, 0x71, 0x6a,
	0x0e, 0x51, 0xc6, 0xca, 0x38, 0xad, 0x2a, 0x21, 0x9a, 0xb8, 0x48, 0x05, 0xad, 0x38, 0xcf, 0xe3,
	0x73, 0xcd, 0x04, 0x53, 0x6b, 0x24, 0x57, 0x3c, 0x96, 0x3f, 0xc1, 0x5b, 0x70, 0x08, 0xe5, 0x4d,
	0x21, 0xb6, 0x95, 0x58, 0xbc, 0xc1, 0x2e, 0x98, 0xbf, 0xe8, 0x6f, 0x0f, 0xf9, 0x28, 0xb4, 0x49,
	0x5b, 0xe2, 0x27, 0x30, 0xbe, 0xa4, 0x45, 0x43, 0xbd, 0x3b, 0x1f, 0x85, 0x26, 0x51, 0xe2, 0x86,
	0xad, 0x0b, 0x96, 0x8a, 0xfb, 0x30, 0xd4, 0x61, 0x7f, 0x10, 0xd8, 0x8a, 0x23, 0xec, 0x8a, 0x17,
	0xe0, 0xfc, 0x6c, 0xf1, 0x5a, 0xee, 0x48, 0xda, 0x49, 0xb0, 0xca, 0x17, 0xf5, 0xae, 0xdf, 0x18,
	0xa4, 0x6f, 0xc4, 0x09, 0xd8, 0x79, 0xd5, 0x51, 0x77, 0xff, 0xa1, 0x64, 0x2f, 0x1b, 0x83, 0xdc,
	0x6c, 0xcb, 0x07, 0x60, 0xa9, 0x2a, 0xf8, 0x8b, 0x60, 0xa2, 0x6c, 0x1c, 0x3f, 0x03, 0x8b, 0xb3,
	0xa6, 0xce, 0xa8, 0x8e, 0xae, 0x15, 0xc6, 0x30, 0x3a, 0x31, 0xae, 0x2e, 0xb7, 0x89, 0xac, 0xdb,
	0x8e, 0xce, 0x35, 0x3b, 0x50, 0xcf, 0x94, 0x9b, 0x4a, 0xb4, 0x4e, 0x91, 0x97, 0xd4, 0x1b, 0xf9,
	0x28, 0x1c, 0x11, 0x59, 0xe3, 0x39, 0x80, 0xfa, 0xaf, 0x9a, 0x5d, 0xb9, 0x37, 0xf6, 0xcd, 0xd0,
	0x49, 0xdc, 0x41, 0x40, 0xc2, 0xae, 0xa4, 0xe7, 0x09, 0xbe, 0xc1, 0x4c, 0x1f, 0x50, 0x7e, 0x66,
	0x15, 0xa7, 0xf8, 0x15, 0x58, 0x5c, 0xa4, 0xa2, 0xe1, 0x32, 0xd9, 0x2c, 0x79, 0x3c, 0xe0, 0xf7,
	0xf2, 0x88, 0x68, 0x0b, 0xf6, 0x60, 0x52, 0x52, 0xce, 0xd3, 0x23, 0xd5, 0x89, 0x3b, 0xf9, 0x72,
	0x0e, 0x0f, 0xfb, 0x04, 0x9e, 0x82, 0x4d, 0x56, 0xfb, 0xaf, 0xbb, 0x2f, 0xdf, 0x3f, 0x7d, 0x74,
	0x0d, 0xfc, 0x08, 0xa6, 0x5a, 0xae, 0xdf, 0x6d, 0x77, 0xab, 0xf7, 0x2e, 0x4a, 0x3e, 0xc0, 0x54,
	0x13, 0xb4, 0xbe, 0xe4, 0x19, 0x6d, 0xbf, 0xd2, 0x9e, 0x56, 0x3f, 0xba, 0x27, 0x9b, 0x0d, 0x82,
	0xf0, 0x17, 0x4f, 0x87, 0x8d, 0xe9, 0xfc, 0x81, 0xb1, 0x0c, 0xe0, 0x79, 0xc6, 0xca, 0x48, 0x0f,
	0xa5, 0x1a, 0xc8, 0x48, 0x3e, 0xda, 0x52, 0xcd, 0xde, 0x67, 0x74, 0xb0, 0x64, 0xf1, 0xfa, 0x5f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x64, 0xf0, 0x2b, 0xf4, 0xbf, 0x02, 0x00, 0x00,
}
